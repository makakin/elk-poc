input {
  tcp {
    port => 1056
    type => "step8"
  }
  tcp {
    port => 1057
    type => "step9"
  }
}

filter {
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
  }
  if [type] == "step9" {
    grok {
      match => {
        "syslog_message" => "\[(\s+)?(?<uptime>[0-9]+\.[0-9]+)\]\s\[UFW BLOCK\]\s%{GREEDYDATA:ufw_message}"
      }
      remove_field => [ "syslog_message" ]
    }
    kv {
      source => "ufw_message"
      remove_field => [ "ufw_message" ]
    }
  }
  date {
    match => [ "syslog_timestamp", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "MMM  d HH:mm:ss" ]
    remove_field => [ "syslog_timestamp" ]
  }
  syslog_pri { }
  if [syslog_message] =~ "Failed password for" {
    grok {
      match => {
        "syslog_message" => "Failed password for %{USER:user} from %{IPV4:source_ip} port %{INT:source_port:int} %{WORD:auth_program}"
      }
    }
    mutate {
      add_tag => [ "logon_failure" ]
    }
  }
  grok {
    match => {
      "syslog_message" => "Accepted password for %{USER:user} from %{IPV4:source_ip} port %{INT:source_port:int} %{WORD:auth_program}"
    }
    add_tag => [ "logon_success" ]
    tag_on_failure => []
  }
  geoip {
    source => "source_ip"
    target => "source_geo"
  }
  geoip {
    database => "/usr/local/share/GeoIP/GeoIPASNum.dat"
    source => "source_ip"
    target => "source_geo"
  }
}

output {
  elasticsearch { 
    index => "lab1.3"
 }
}
